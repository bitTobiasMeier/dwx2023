openapi: 3.0.1
info:
  title: 'Dinner.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null'
  version: '1.0'
paths:
  /api/Reservation:
    post:
      tags:
        - Reservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          text/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Reservation'
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
            text/json:
              schema:
                $ref: '#/components/schemas/Reservation'
    put:
      tags:
        - Reservation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          text/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Reservation'
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
            text/json:
              schema:
                $ref: '#/components/schemas/Reservation'
    delete:
      tags:
        - Reservation
      parameters:
        - name: reservationId
          in: query
          style: form
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Reservation'
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
            text/json:
              schema:
                $ref: '#/components/schemas/Reservation'
    get:
      tags:
        - Reservation
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
  '/api/Reservation/{reservationId}':
    get:
      tags:
        - Reservation
      parameters:
        - name: reservationId
          in: path
          required: true
          style: simple
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/Reservation'
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
            text/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /api/Restaurant:
    get:
      tags:
        - Restaurant
      operationId: GetRestaurants
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
components:
  schemas:
    Address:
      type: object
      properties:
        street:
          type: string
          nullable: true
        housenumber:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      additionalProperties: false
    Company:
      type: object
      properties:
        name:
          type: string
          nullable: true
        contact:
          $ref: '#/components/schemas/Person'
      additionalProperties: false
    Person:
      type: object
      properties:
        vorname:
          type: string
          nullable: true
        nachname:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
      additionalProperties: false
    Reservation:
      type: object
      properties:
        id:
          type: integer
          format: int32
          nullable: true
        restaurantId:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        contact:
          $ref: '#/components/schemas/ReservationContact'
        personcount:
          type: integer
          format: int32
      additionalProperties: false
    ReservationContact:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/ReservationContactTypes'
        companyReservation:
          $ref: '#/components/schemas/Company'
        privateReservation:
          $ref: '#/components/schemas/Person'
      additionalProperties: false
    ReservationContactTypes:
      enum:
        - PrivateReservation
        - CompanyReservation
      type: string
    Restaurant:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
      additionalProperties: false